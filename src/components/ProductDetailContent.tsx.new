'use client';

import React, { useState, useEffect, useRef } from 'react';
import Link from 'next/link';
import Image from 'next/image';
import {
  motion,
  AnimatePresence,
  useScroll,
  useTransform,
} from 'framer-motion';
import { useCart } from '@/components/CartProvider';
import { formatPrice } from '@/lib/wooClient';
import ProductGallery from './ProductGalleryComponent';

// Type pour les produits
interface Product {
  id: number;
  name: string;
  slug: string;
  price: string;
  regular_price?: string;
  sale_price?: string;
  on_sale?: boolean;
  stock_status: 'instock' | 'outofstock' | 'onbackorder';
  stock_quantity?: number;
  short_description: string;
  description: string;
  images: { src: string; alt: string }[];
  categories: { id: number; name: string; slug: string }[];
  average_rating?: string;
  rating_count?: number;
  featured?: boolean;
  tags: { id: number; name: string; slug: string }[];
  // Attributs techniques
  weight?: string;
  dimensions?: {
    length: string;
    width: string;
    height: string;
  };
  attributes?: {
    id: number;
    name: string;
    position: number;
    visible: boolean;
    variation: boolean;
    options: string[];
  }[];
}

interface AppleStyleProductDetailProps {
  product: Product;
  accessories?: Product[];
  premiumVariant?: Product | null;
  similarProducts?: Product[];
}

// Caractéristiques par défaut pour le SSR et fallback
const defaultFeatures = [
  'Qualité premium garantie',
  'Conception ergonomique',
  'Matériaux durables',
  'Performance optimale',
  'Design élégant',
  'Fonctionnalités innovantes'
];

// Extraction des caractéristiques du produit
const extractFeatures = (htmlContent: string) => {
  // Si nous sommes côté serveur, retourner les caractéristiques par défaut
  if (typeof window === 'undefined') {
    return defaultFeatures;
  }

  try {
    // Côté client, on peut parser le HTML
    const tempDiv = document.createElement('div');
    tempDiv.innerHTML = htmlContent;
    
    // Rechercher les listes et paragraphes
    const listItems = tempDiv.querySelectorAll('li');
    const paragraphs = tempDiv.querySelectorAll('p');
    
    let features: string[] = [];
    
    // Si on trouve des éléments de liste, les utiliser en priorité
    if (listItems.length > 0) {
      features = Array.from(listItems)
        .map(item => item.textContent?.trim() || '')
        .filter(text => text.length > 10);
    } 
    // Sinon utiliser les paragraphes courts
    else if (paragraphs.length > 0) {
      features = Array.from(paragraphs)
        .map(p => p.textContent?.trim() || '')
        .filter(text => text.length > 10 && text.length < 200);
    }
    
    // Limiter à 6 caractéristiques maximum
    features = features.slice(0, 6);
    
    // Si pas assez de caractéristiques trouvées, compléter avec les valeurs par défaut
    while (features.length < 6) {
      features.push(defaultFeatures[features.length % defaultFeatures.length]);
    }
    
    return features;
  } catch (error) {
    console.error("Erreur lors de l'extraction des caractéristiques:", error);
    return defaultFeatures;
  }
};

export default function AppleStyleProductDetail({
  product,
  accessories = [],
  premiumVariant = null,
  similarProducts = [],
}: AppleStyleProductDetailProps) {
  const [quantity, setQuantity] = useState(1);
  const [selectedAccessories, setSelectedAccessories] = useState<number[]>([]);
  const [isAddingToCart, setIsAddingToCart] = useState(false);
  const [notification, setNotification] = useState({
    show: false,
    message: '',
    type: '',
  });
  const [activeSection, setActiveSection] = useState('overview');
  const [showCompareSection, setShowCompareSection] = useState(false);
  const { addToCart } = useCart();

  // Refs pour la navigation par scroll
  const overviewRef = useRef<HTMLDivElement>(null);
  const featuresRef = useRef<HTMLDivElement>(null);
  const accessoriesRef = useRef<HTMLDivElement>(null);
  const specsRef = useRef<HTMLDivElement>(null);

  // Animation au scroll
  const { scrollYProgress } = useScroll();
  const opacity = useTransform(scrollYProgress, [0, 0.1], [1, 0]);
  const scale = useTransform(scrollYProgress, [0, 0.1], [1, 0.95]);

  // Calculer le prix total (produit + accessoires sélectionnés)
  const calculateTotalPrice = () => {
    let total = parseFloat(product.price) * quantity;

    selectedAccessories.forEach((accessoryId) => {
      const accessory = accessories.find((acc) => acc.id === accessoryId);
      if (accessory) {
        total += parseFloat(accessory.price);
      }
    });

    return total;
  };

  // Calculer le pourcentage de réduction
  const calculateDiscount = () => {
    if (product.on_sale && product.regular_price && product.sale_price) {
      const regular = parseFloat(product.regular_price);
      const sale = parseFloat(product.sale_price);
      return Math.round(((regular - sale) / regular) * 100);
    }
    return 0;
  };

  // Gérer la sélection d'accessoires
  const toggleAccessory = (accessoryId: number) => {
    setSelectedAccessories((prev) => {
      if (prev.includes(accessoryId)) {
        return prev.filter((id) => id !== accessoryId);
      } else {
        return [...prev, accessoryId];
      }
    });
  };

  // Gérer l'ajout au panier
  const handleAddToCart = async () => {
    setIsAddingToCart(true);

    try {
      // Ajouter le produit principal au panier
      await addToCart(product.id, quantity);

      // Ajouter les accessoires sélectionnés
      for (const accessoryId of selectedAccessories) {
        await addToCart(accessoryId, 1);
      }

      setNotification({
        show: true,
        message: `${product.name} et les accessoires sélectionnés ajoutés au panier`,
        type: 'success',
      });

      setTimeout(() => {
        setNotification({ show: false, message: '', type: '' });
      }, 3000);
    } catch (error) {
      console.error("Erreur lors de l'ajout au panier:", error);

      setNotification({
        show: true,
        message: "Erreur lors de l'ajout au panier",
        type: 'error',
      });
    } finally {
      setIsAddingToCart(false);
    }
  };

  // Effet pour suivre le scroll et mettre à jour la section active
  useEffect(() => {
    const handleScroll = () => {
      const scrollPosition = window.scrollY + 100; // Offset pour le menu collant

      if (
        overviewRef.current &&
        scrollPosition <
          overviewRef.current.offsetTop +
            overviewRef.current.clientHeight
      ) {
        setActiveSection('overview');
      } else if (
        featuresRef.current &&
        scrollPosition <
          featuresRef.current.offsetTop +
            featuresRef.current.clientHeight
      ) {
        setActiveSection('features');
      } else if (
        accessoriesRef.current &&
        scrollPosition <
          accessoriesRef.current.offsetTop +
            accessoriesRef.current.clientHeight
      ) {
        setActiveSection('accessories');
      } else if (specsRef.current) {
        setActiveSection('specs');
      }
    };

    window.addEventListener('scroll', handleScroll);
    return () => window.removeEventListener('scroll', handleScroll);
  }, []);

  // Fonction pour naviguer vers une section
  const scrollToSection = (sectionRef: React.RefObject<HTMLDivElement | null>) => {
    if (sectionRef.current) {
      window.scrollTo({
        top: sectionRef.current.offsetTop - 80, // Offset pour le header fixe
        behavior: 'smooth',
      });
    }
  };

  // Préparer les caractéristiques du produit
  // Extraire les caractéristiques du produit
  const productFeatures = typeof window === 'undefined' 
    ? defaultFeatures 
    : extractFeatures(product.description);

  return (
    <div className='bg-white font-sans'>
      {/* Notification */}
      <AnimatePresence>
        {notification.show && (
          <motion.div
            initial={{ opacity: 0, y: -20 }}
            animate={{ opacity: 1, y: 0 }}
            exit={{ opacity: 0, y: -20 }}
            className={`fixed top-20 left-1/2 transform -translate-x-1/2 z-50 p-4 rounded-lg shadow-lg ${
              notification.type === 'success'
                ? 'bg-green-50 border-l-4 border-green-500 text-green-700'
                : 'bg-red-50 border-l-4 border-red-500 text-red-700'
            }`}>
            {notification.message}
          </motion.div>
        )}
      </AnimatePresence>

      {/* Navigation en haut fixe (style Apple) */}
      <div className='sticky top-20 z-40 bg-white/90 backdrop-blur-md border-t border-b border-gray-200 mt-4'>
        <div className='max-w-7xl mx-auto px-4 sm:px-6 lg:px-8'>
          <div className='flex items-center justify-between h-16'>
            <div className='flex items-center space-x-8'>
              <h1 className='text-lg font-semibold text-gray-900'>
                {product.name}
              </h1>
            </div>
            <div className='hidden md:flex space-x-8'>
              <button
                onClick={() => scrollToSection(overviewRef)}
                className={`text-sm font-medium ${
                  activeSection === 'overview'
                    ? 'text-indigo-600 border-b-2 border-indigo-600'
                    : 'text-gray-500 hover:text-gray-900'
                } px-1 py-4`}>
                Aperçu
              </button>
              <button
                onClick={() => scrollToSection(featuresRef)}
                className={`text-sm font-medium ${
                  activeSection === 'features'
                    ? 'text-indigo-600 border-b-2 border-indigo-600'
                    : 'text-gray-500 hover:text-gray-900'
                } px-1 py-4`}>
                Caractéristiques
              </button>
              <button
                onClick={() => scrollToSection(accessoriesRef)}
                className={`text-sm font-medium ${
                  activeSection === 'accessories'
                    ? 'text-indigo-600 border-b-2 border-indigo-600'
                    : 'text-gray-500 hover:text-gray-900'
                } px-1 py-4`}>
                Accessoires
              </button>
              <button
                onClick={() => scrollToSection(specsRef)}
                className={`text-sm font-medium ${
                  activeSection === 'specs'
                    ? 'text-indigo-600 border-b-2 border-indigo-600'
                    : 'text-gray-500 hover:text-gray-900'
                } px-1 py-4`}>
                Spécifications
              </button>
            </div>
            <div className='hidden md:block'>
              <button
                onClick={handleAddToCart}
                disabled={
                  isAddingToCart ||
                  product.stock_status !== 'instock'
                }
                className='bg-indigo-600 text-white px-4 py-2 rounded-full text-sm font-medium hover:bg-indigo-700 transition-colors'>
                {isAddingToCart ? (
                  <span className='flex items-center'>
                    <svg
                      className='animate-spin -ml-1 mr-2 h-4 w-4 text-white'
                      fill='none'
                      viewBox='0 0 24 24'>
                      <circle
                        className='opacity-25'
                        cx='12'
                        cy='12'
                        r='10'
                        stroke='currentColor'
                        strokeWidth='4'
                      />
                      <path
                        className='opacity-75'
                        fill='currentColor'
                        d='M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z'
                      />
                    </svg>
                    Ajout en cours...
                  </span>
                ) : (
                  'Ajouter au panier'
                )}
              </button>
            </div>
          </div>
        </div>
      </div>

      {/* Section Hero */}
      <section className='relative bg-gradient-to-b from-gray-50 to-white pt-24 pb-16'>
        <div className='max-w-7xl mx-auto px-4 sm:px-6 lg:px-8'>
          <motion.div
            style={{ opacity, scale }}
            className='text-center max-w-3xl mx-auto mb-16'>
            <h1 className='text-4xl md:text-6xl font-bold text-gray-900 tracking-tight mb-4'>
              {product.name}
            </h1>
            <p className='text-xl md:text-2xl text-gray-500 mb-8'>
              {product.short_description.replace(/<[^>]*>/g, '')}
            </p>
            <div className='flex flex-col sm:flex-row justify-center items-center gap-4 mb-8'>
              <span className='text-3xl font-bold text-gray-900'>
                {formatPrice(product.price)}
              </span>
              {product.on_sale && product.regular_price && (
                <span className='text-lg text-gray-500 line-through'>
                  {formatPrice(product.regular_price)}
                </span>
              )}
              {product.on_sale && (
                <span className='bg-red-100 text-red-800 text-xs font-bold px-2 py-1 rounded-full'>
                  -{calculateDiscount()}%
                </span>
              )}
            </div>
            <div className='flex flex-wrap justify-center gap-4'>
              <button
                onClick={handleAddToCart}
                disabled={
                  isAddingToCart ||
                  product.stock_status !== 'instock'
                }
                className='bg-indigo-600 text-white px-6 py-3 rounded-full text-base font-medium hover:bg-indigo-700 transition-colors disabled:opacity-50 disabled:cursor-not-allowed'>
                {isAddingToCart ? (
                  <span className='flex items-center'>
                    <svg
                      className='animate-spin -ml-1 mr-2 h-4 w-4 text-white'
                      fill='none'
                      viewBox='0 0 24 24'>
                      <circle
                        className='opacity-25'
                        cx='12'
                        cy='12'
                        r='10'
                        stroke='currentColor'
                        strokeWidth='4'
                      />
                      <path
                        className='opacity-75'
                        fill='currentColor'
                        d='M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z'
                      />
                    </svg>
                    Ajout en cours...
                  </span>
                ) : (
                  'Ajouter au panier'
                )}
              </button>
              {premiumVariant && (
                <Link
                  href={`/products/${premiumVariant.slug}`}
                  className='bg-gray-200 text-gray-800 px-6 py-3 rounded-full text-base font-medium hover:bg-gray-300 transition-colors'>
                  Voir la version premium
                </Link>
              )}
            </div>
          </motion.div>

          {/* Galerie d'images professionnelle */}
          <div className='relative'>
            <motion.div
              initial={{ opacity: 0, y: 30 }}
              animate={{ opacity: 1, y: 0 }}
              transition={{ duration: 0.8 }}
              className='max-w-4xl mx-auto mb-16'>
              <ProductGallery
                images={product.images}
                productName={product.name}
              />
            </motion.div>
          </div>
        </div>
      </section>

      {/* Section Overview */}
      <section
        ref={overviewRef}
        className='py-24 bg-white'>
        <div className='max-w-7xl mx-auto px-4 sm:px-6 lg:px-8'>
          <div className='max-w-3xl mx-auto text-center mb-16'>
            <h2 className='text-3xl font-bold text-gray-900 mb-4'>
              Vue d'ensemble
            </h2>
            <p className='text-xl text-gray-500'>
              Découvrez ce qui rend ce produit exceptionnel
            </p>
          </div>

          {/* Grid de caractéristiques principales */}
          <div className='grid grid-cols-1 md:grid-cols-3 gap-12 mb-24'>
            <motion.div
              initial={{ opacity: 0, y: 50 }}
              whileInView={{ opacity: 1, y: 0 }}
              viewport={{ once: true, margin: '-100px' }}
              transition={{ duration: 0.5 }}
              className='text-center'>
              <div className='w-16 h-16 bg-indigo-100 rounded-full flex items-center justify-center mx-auto mb-6'>
                <svg
                  className='h-8 w-8 text-indigo-600'
                  fill='none'
                  viewBox='0 0 24 24'
                  stroke='currentColor'>
                  <path
                    strokeLinecap='round'
                    strokeLinejoin='round'
                    strokeWidth={2}
                    d='M5 13l4 4L19 7'
                  />
                </svg>
              </div>
              <h3 className='text-xl font-semibold text-gray-900 mb-3'>
                Qualité supérieure
              </h3>
              <p className='text-gray-600'>
                Conçu avec des matériaux premium pour une
                durabilité et des performances exceptionnelles.
              </p>
            </motion.div>

            <motion.div
              initial={{ opacity: 0, y: 50 }}
              whileInView={{ opacity: 1, y: 0 }}
              viewport={{ once: true, margin: '-100px' }}
              transition={{ duration: 0.5, delay: 0.1 }}
              className='text-center'>
              <div className='w-16 h-16 bg-indigo-100 rounded-full flex items-center justify-center mx-auto mb-6'>
                <svg
                  className='h-8 w-8 text-indigo-600'
                  fill='none'
                  viewBox='0 0 24 24'
                  stroke='currentColor'>
                  <path
                    strokeLinecap='round'
                    strokeLinejoin='round'
                    strokeWidth={2}
                    d='M13 10V3L4 14h7v7l9-11h-7z'
                  />
                </svg>
              </div>
              <h3 className='text-xl font-semibold text-gray-900 mb-3'>
                Performance optimale
              </h3>
              <p className='text-gray-600'>
                Des performances inégalées qui répondent à tous
                vos besoins quotidiens.
              </p>
            </motion.div>

            <motion.div
              initial={{ opacity: 0, y: 50 }}
              whileInView={{ opacity: 1, y: 0 }}
              viewport={{ once: true, margin: '-100px' }}
              transition={{ duration: 0.5, delay: 0.2 }}
              className='text-center'>
              <div className='w-16 h-16 bg-indigo-100 rounded-full flex items-center justify-center mx-auto mb-6'>
                <svg
                  className='h-8 w-8 text-indigo-600'
                  fill='none'
                  viewBox='0 0 24 24'
                  stroke='currentColor'>
                  <path
                    strokeLinecap='round'
                    strokeLinejoin='round'
                    strokeWidth={2}
                    d='M15 12a3 3 0 11-6 0 3 3 0 016 0z'
                  />
                  <path
                    strokeLinecap='round'
                    strokeLinejoin='round'
                    strokeWidth={2}
                    d='M2.458 12C3.732 7.943 7.523 5 12 5c4.478 0 8.268 2.943 9.542 7-1.274 4.057-5.064 7-9.542 7-4.477 0-8.268-2.943-9.542-7z'
                  />
                </svg>
              </div>
              <h3 className='text-xl font-semibold text-gray-900 mb-3'>
                Design élégant
              </h3>
              <p className='text-gray-600'>
                Un design minimaliste et élégant qui complète
                parfaitement votre style de vie.
              </p>
            </motion.div>
          </div>

          {/* Image et texte alternés */}
          <div className='space-y-32'>
            {/* Première rangée : deux images */}
            <div className='flex flex-col md:flex-row items-center gap-12'>
              <motion.div
                initial={{ opacity: 0, x: -50 }}
                whileInView={{ opacity: 1, x: 0 }}
                viewport={{ once: true, margin: '-100px' }}
                transition={{ duration: 0.6 }}
                className='md:w-1/2'>
                <div className='relative aspect-square rounded-2xl overflow-hidden shadow-md bg-white p-4'>
                  {product.images &&
                  product.images.length > 0 ? (
                    <Image
                      src={
                        product.images[
                          Math.min(
                            1,
                            product.images.length -
                              1
                          )
                        ]?.src || product.images[0].src
                      }
                      alt={product.name}
                      fill
                      className='object-contain'
                      sizes='(max-width: 768px) 100vw, 600px'
                    />
                  ) : (
                    <div className='w-full h-full bg-gray-100 flex items-center justify-center'>
                      <svg
                        className='h-16 w-16 text-gray-400'
                        fill='none'
                        viewBox='0 0 24 24'
                        stroke='currentColor'>
                        <path
                          strokeLinecap='round'
                          strokeLinejoin='round'
                          strokeWidth={2}
                          d='M4 16l4.586-4.586a2 2 0 012.828 0L16 16m-2-2l1.586-1.586a2 2 0 012.828 0L20 14m-6-6h.01M6 20h12a2 2 0 002-2V6a2 2 0 00-2-2H6a2 2 0 00-2 2v12a2 2 0 002 2z'
                        />
                      </svg>
                    </div>
                  )}
                </div>
              </motion.div>

              <motion.div
                initial={{ opacity: 0, x: 50 }}
                whileInView={{ opacity: 1, x: 0 }}
                viewport={{ once: true, margin: '-100px' }}
                transition={{ duration: 0.6 }}
                className='md:w-1/2'>
                <div className='relative aspect-square rounded-2xl overflow-hidden shadow-md bg-white p-4'>
                  {product.images &&
                  product.images.length > 1 ? (
                    <Image
                      src={
                        product.images[
                          Math.min(
                            2,
                            product.images.length -
                              1
                          )
                        ]?.src || product.images[0].src
                      }
                      alt={product.name}
                      fill
                      className='object-contain'
                      sizes='(max-width: 768px) 100vw, 600px'
                    />
                  ) : (
                    <div className='w-full h-full bg-gray-100 flex items-center justify-center'>
                      <svg
                        className='h-16 w-16 text-gray-400'
                        fill='none'
                        viewBox='0 0 24 24'
                        stroke='currentColor'>
                        <path
                          strokeLinecap='round'
                          strokeLinejoin='round'
                          strokeWidth={2}
                          d='M4 16l4.586-4.586a2 2 0 012.828 0L16 16m-2-2l1.586-1.586a2 2 0 012.828 0L20 14m-6-6h.01M6 20h12a2 2 0 002-2V6a2 2 0 00-2-2H6a2 2 0 00-2 2v12a2 2 0 002 2z'
                        />
                      </svg>
                    </div>
                  )}
                </div>
              </motion.div>
            </div>

            {/* Bloc de texte "Conçu pour l'excellence" + petite image à droite */}
            <div className='flex flex-col md:flex-row items-center gap-12'>
              <motion.div
                initial={{ opacity: 0, x: -50 }}
                whileInView={{ opacity: 1, x: 0 }}
                viewport={{ once: true, margin: '-100px' }}
                transition={{ duration: 0.6 }}
                className='md:w-1/2'>
                <h3 className='text-2xl font-bold text-gray-900 mb-4'>
                  Conçu pour l'excellence
                </h3>
                <p className='text-lg text-gray-600 mb-6'>
                  Chaque détail a été soigneusement pensé pour
                  offrir une expérience utilisateur
                  exceptionnelle. Des matériaux de haute
                  qualité aux finitions impeccables, ce
                  produit incarne l'excellence.
                </p>
                <ul className='space-y-4'>
                  <li className='flex items-start'>
                    <svg
                      className='h-6 w-6 text-indigo-600 mt-0.5 mr-3 flex-shrink-0'
                      fill='none'
                      viewBox='0 0 24 24'
                      stroke='currentColor'>
                      <path
                        strokeLinecap='round'
                        strokeLinejoin='round'
                        strokeWidth={2}
                        d='M5 13l4 4L19 7'
                      />
                    </svg>
                    <span className='text-gray-600'>
                      Matériaux durables et écologiques
                    </span>
                  </li>
                  <li className='flex items-start'>
                    <svg
                      className='h-6 w-6 text-indigo-600 mt-0.5 mr-3 flex-shrink-0'
                      fill='none'
                      viewBox='0 0 24 24'
                      stroke='currentColor'>
                      <path
                        strokeLinecap='round'
                        strokeLinejoin='round'
                        strokeWidth={2}
                        d='M5 13l4 4L19 7'
                      />
                    </svg>
                    <span className='text-gray-600'>
                      Design ergonomique pour un confort
                      optimal
                    </span>
                  </li>
                  <li className='flex items-start'>
                    <svg
                      className='h-6 w-6 text-indigo-600 mt-0.5 mr-3 flex-shrink-0'
                      fill='none'
                      viewBox='0 0 24 24'
                      stroke='currentColor'>
                      <path
                        strokeLinecap='round'
                        strokeLinejoin='round'
                        strokeWidth={2}
                        d='M5 13l4 4L19 7'
                      />
                    </svg>
                    <span className='text-gray-600'>
                      Finitions de qualité supérieure
                    </span>
                  </li>
                </ul>
              </motion.div>

              <motion.div
                initial={{ opacity: 0, x: 50 }}
                whileInView={{ opacity: 1, x: 0 }}
                viewport={{ once: true, margin: '-100px' }}
                transition={{ duration: 0.6 }}
                className='md:w-1/2'>
                <div className='relative aspect-square rounded-2xl overflow-hidden shadow-md bg-white p-4'>
                  {product.images &&
                  product.images.length > 3 ? (
                    <Image
                      src={
                        product.images[
                          Math.min(
                            3,
                            product.images.length -
                              1
                          )
                        ]?.src || product.images[0].src
                      }
                      alt={product.name}
                      fill
                      className='object-contain'
                      sizes='(max-width: 768px) 100vw, 600px'
                    />
                  ) : (
                    <div className='w-full h-full bg-gray-100 flex items-center justify-center'>
                      <svg
                        className='h-16 w-16 text-gray-400'
                        fill='none'
                        viewBox='0 0 24 24'
                        stroke='currentColor'>
                        <path
                          strokeLinecap='round'
                          strokeLinejoin='round'
                          strokeWidth={2}
                          d='M4 16l4.586-4.586a2 2 0 012.828 0L16 16m-2-2l1.586-1.586a2 2 0 012.828 0L20 14m-6-6h.01M6 20h12a2 2 0 002-2V6a2 2 0 00-2-2H6a2 2 0 00-2 2v12a2 2 0 002 2z'
                        />
                      </svg>
                    </div>
                  )}
                </div>
              </motion.div>
            </div>

            {/* Deuxième rangée (inversée) : texte + image */}
            <div className='flex flex-col md:flex-row-reverse items-center gap-12'>
              <motion.div
                initial={{ opacity: 0, x: 50 }}
                whileInView={{ opacity: 1, x: 0 }}
                viewport={{ once: true, margin: '-100px' }}
                transition={{ duration: 0.6 }}
                className='md:w-1/2'>
                <h3 className='text-2xl font-bold text-gray-900 mb-4'>
                  Des performances inégalées
                </h3>
                <p className='text-lg text-gray-600 mb-6'>
                  Profitez de performances exceptionnelles
                  jour après jour. Ce produit a été conçu pour
                  offrir une efficacité maximale et une
                  expérience utilisateur fluide dans toutes
                  les situations.
                </p>
                <ul className='space-y-4'>
                  <li className='flex items-start'>
                    <svg
                      className='h-6 w-6 text-indigo-600 mt-0.5 mr-3 flex-shrink-0'
                      fill='none'
                      viewBox='0 0 24 24'
                      stroke='currentColor'>
                      <path
                        strokeLinecap='round'
                        strokeLinejoin='round'
                        strokeWidth={2}
                        d='M5 13l4 4L19 7'
                      />
                    </svg>
                    <span className='text-gray-600'>
                      Fonctionnement rapide et réactif
                    </span>
                  </li>
                  <li className='flex items-start'>
                    <svg
                      className='h-6 w-6 text-indigo-600 mt-0.5 mr-3 flex-shrink-0'
                      fill='none'
                      viewBox='0 0 24 24'
                      stroke='currentColor'>
                      <path
                        strokeLinecap='round'
                        strokeLinejoin='round'
                        strokeWidth={2}
                        d='M5 13l4 4L19 7'
                      />
                    </svg>
                    <span className='text-gray-600'>
                      Optimisé pour une utilisation
                      intensive
                    </span>
                  </li>
                  <li className='flex items-start'>
                    <svg
                      className='h-6 w-6 text-indigo-600 mt-0.5 mr-3 flex-shrink-0'
                      fill='none'
                      viewBox='0 0 24 24'
                      stroke='currentColor'>
                      <path
                        strokeLinecap='round'
                        strokeLinejoin='round'
                        strokeWidth={2}
                        d='M5 13l4 4L19 7'
                      />
                    </svg>
                    <span className='text-gray-600'>
                      Efficacité énergétique améliorée
                    </span>
                  </li>
                </ul>
              </motion.div>

              <motion.div
                initial={{ opacity: 0, x: -50 }}
                whileInView={{ opacity: 1, x: 0 }}
                viewport={{ once: true, margin: '-100px' }}
                transition={{ duration: 0.6 }}
                className='md:w-1/2'>
                <div className='relative aspect-square rounded-2xl overflow-hidden shadow-md bg-white p-4'>
                  {product.images &&
                  product.images.length > 4 ? (
                    <Image
                      src={
                        product.images[
                          Math.min(
                            4,
                            product.images.length -
                              1
                          )
                        ]?.src || product.images[0].src
                      }
                      alt={product.name}
                      fill
                      className='object-contain'
                      sizes='(max-width: 768px) 100vw, 600px'
                    />
                  ) : (
                    <div className='w-full h-full bg-gray-100 flex items-center justify-center'>
                      <svg
                        className='h-16 w-16 text-gray-400'
                        fill='none'
                        viewBox='0 0 24 24'
                        stroke='currentColor'>
                        <path
                          strokeLinecap='round'
                          strokeLinejoin='round'
                          strokeWidth={2}
                          d='M4 16l4.586-4.586a2 2 0 012.828 0L16 16m-2-2l1.586-1.586a2 2 0 012.828 0L20 14m-6-6h.01M6 20h12a2 2 0 002-2V6a2 2 0 00-2-2H6a2 2 0 00-2 2v12a2 2 0 002 2z'
                        />
                      </svg>
                    </div>
                  )}
                </div>
              </motion.div>
            </div>
          </div>
        </div>
      </section>

      {/* Section Caractéristiques */}
      <section
        ref={featuresRef}
        className='py-24 bg-gray-50'>
        <div className='max-w-7xl mx-auto px-4 sm:px-6 lg:px-8'>
          <div className='max-w-3xl mx-auto text-center mb-16'>
            <h2 className='text-3xl font-bold text-gray-900 mb-4'>
              Caractéristiques techniques
            </h2>
            <p className='text-xl text-gray-500'>
              Fonctionnalités essentielles extraites de la description du produit
            </p>
          </div>

          <div className='grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-8'>
            {productFeatures.map((feature, index) => (
              <motion.div
                key={index}
                initial={{ opacity: 0, y: 30 }}
                whileInView={{ opacity: 1, y: 0 }}
                viewport={{ once: true, margin: '-100px' }}
                transition={{
                  duration: 0.5,
                  delay: index * 0.1,
                }}
                className='bg-white rounded-xl p-6 shadow-sm hover:shadow-md transition-shadow'>
                <div className='w-12 h-12 bg-indigo-100 rounded-lg flex items-center justify-center mb-4'>
                  <svg
                    className='h-6 w-6 text-indigo-600'
                    fill='none'
                    viewBox='0 0 24 24'
                    stroke='currentColor'>
                    {index % 6 === 0 && (
                      <path strokeLinecap='round' strokeLinejoin='round' strokeWidth={2} d='M5 13l4 4L19 7' />
                    )}
                    {index % 6 === 1 && (
                      <path strokeLinecap='round' strokeLinejoin='round' strokeWidth={2} d='M13 10V3L4 14h7v7l9-11h-7z' />
                    )}
                    {index % 6 === 2 && (
                      <path strokeLinecap='round' strokeLinejoin='round' strokeWidth={2} d='M12 8c-1.657 0-3 .895-3 2s1.343 2 3 2 3 .895 3 2-1.343 2-3 2m0-8c1.11 0 2.08.402 2.599 1M12 8V7m0 1v8m0 0v1m0-1c-1.11 0-2.08-.402-2.599-1M21 12a9 9 0 11-18 0 9 9 0 0118 0z' />
                    )}
                    {index % 6 === 3 && (
                      <path strokeLinecap='round' strokeLinejoin='round' strokeWidth={2} d='M9 12l2 2 4-4m5.618-4.016A11.955 11.955 0 0112 2.944a11.955 11.955 0 01-8.618 3.04A12.02 12.02 0 003 9c0 5.591 3.824 10.29 9 11.622 5.176-1.332 9-6.03 9-11.622 0-1.042-.133-2.052-.382-3.016z' />
                    )}
                    {index % 6 === 4 && (
                      <path strokeLinecap='round' strokeLinejoin='round' strokeWidth={2} d='M9.663 17h4.673M12 3v1m6.364 1.636l-.707.707M21 12h-1M4 12H3m3.343-5.657l-.707-.707m2.828 9.9a5 5 0 117.072 0l-.548.547A3.374 3.374 0 0014 18.469V19a2 2 0 11-4 0v-.531c0-.895-.356-1.754-.988-2.386l-.548-.547z' />
                    )}
                    {index % 6 === 5 && (
                      <path strokeLinecap='round' strokeLinejoin='round' strokeWidth={2} d='M3 12l2-2m0 0l7-7 7 7M5 10v10a1 1 0 001 1h3m10-11l2 2m-2-2v10a1 1 0 01-1 1h-3m-6 0a1 1 0 001-1v-4a1 1 0 011-1h2a1 1 0 011 1v4a1 1 0 001 1m-6 0h6' />
                    )}
                  </svg>
                </div>
                <h3 className='text-lg font-medium text-gray-900 mb-2'>
                  {feature.split(' ').slice(0, 3).join(' ')}
                  {feature.split(' ').length > 3 ? '...' : ''}
                </h3>
                <p className='text-gray-600'>
                  {feature}
                </p>
              </motion.div>
            ))}
          </div>

          {/* Bouton Comparer */}
          <div className='text-center mt-12'>
            <button
              onClick={() =>
                setShowCompareSection(!showCompareSection)
              }
              className='inline-flex items-center text-indigo-600 font-medium hover:text-indigo-800'>
              {showCompareSection
                ? 'Masquer la comparaison'
                : "Comparer avec d'autres modèles"}
              <svg
                className={`ml-2 h-5 w-5 transform transition-transform ${
                  showCompareSection ? 'rotate-180' : ''
                }`}
                fill='none'
                viewBox='0 0 24 24'
                stroke='currentColor'>
                <path
                  strokeLinecap='round'
                  strokeLinejoin='round'
                  strokeWidth={2}
                  d='M19 9l-7 7-7-7'
                />
              </svg>
            </button>
          </div>

          {/* Tableau de comparaison (conditionnel) */}
          <AnimatePresence>
            {showCompareSection && (
              <motion.div
                initial={{ opacity: 0, height: 0 }}
                animate={{ opacity: 1, height: 'auto' }}
                exit={{ opacity: 0, height: 0 }}
                transition={{ duration: 0.3 }}
                className='mt-8 overflow-hidden'>
                <div className='bg-white rounded-xl shadow-md overflow-hidden'>
                  <div className='overflow-x-auto'>
                    <table className='min-w-full divide-y divide-gray-200'>
                      <thead className='bg-gray-50'>
                        <tr>
                          <th
                            scope='col'
                            className='px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider'>
                            Fonctionnalité
                          </th>
                          <th
                            scope='col'
                            className='px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider'>
                            {product.name}{' '}
                            <span className='font-normal'>
                              (Standard)
                            </span>
                          </th>
                          {premiumVariant && (
                            <th
                              scope='col'
                              className='px-6 py-3 text-left text-xs font-medium text-indigo-600 uppercase tracking-wider'>
                              {
                                premiumVariant.name
                              }{' '}
                              <span className='font-normal'>
                                (Premium)
                              </span>
                            </th>
                          )}
                        </tr>
                      </thead>
                      <tbody className='bg-white divide-y divide-gray-200'>
                        <tr>
                          <td className='px-6 py-4 whitespace-nowrap text-sm font-medium text-gray-900'>
                            Design
                          </td>
                          <td className='px-6 py-4 whitespace-nowrap text-sm text-gray-500'>
                            <span className='inline-flex items-center'>
                              <svg
                                className='h-5 w-5 text-green-500 mr-1'
                                fill='none'
                                viewBox='0 0 24 24'
                                stroke='currentColor'>
                                <path
                                  strokeLinecap='round'
                                  strokeLinejoin='round'
                                  strokeWidth={
                                    2
                                  }
                                  d='M5 13l4 4L19 7'
                                />
                              </svg>
                              Standard
                            </span>
                          </td>
                          {premiumVariant && (
                            <td className='px-6 py-4 whitespace-nowrap text-sm text-gray-500'>
                              <span className='inline-flex items-center'>
                                <svg
                                  className='h-5 w-5 text-green-500 mr-1'
                                  fill='none'
                                  viewBox='0 0 24 24'
                                  stroke='currentColor'>
                                  <path
                                    strokeLinecap='round'
                                    strokeLinejoin='round'
                                    strokeWidth={
                                      2
                                    }
                                    d='M5 13l4 4L19 7'
                                  />
                                </svg>
                                Premium
                              </span>
                            </td>
                          )}
                        </tr>
                        <tr>
                          <td className='px-6 py-4 whitespace-nowrap text-sm font-medium text-gray-900'>
                            Performance
                          </td>
                          <td className='px-6 py-4 whitespace-nowrap text-sm text-gray-500'>
                            <span className='inline-flex items-center'>
                              <svg
                                className='h-5 w-5 text-green-500 mr-1'
                                fill='none'
                                viewBox='0 0 24 24'
                                stroke='currentColor'>
                                <path
                                  strokeLinecap='round'
                                  strokeLinejoin='round'
                                  strokeWidth={
                                    2
                                  }
                                  d='M5 13l4 4L19 7'
                                />
                              </svg>
                              Haute
                            </span>
                          </td>
                          {premiumVariant && (
                            <td className='px-6 py-4 whitespace-nowrap text-sm text-gray-500'>
                              <span className='inline-flex items-center'>
                                <svg
                                  className='h-5 w-5 text-green-500 mr-1'
                                  fill='none'
                                  viewBox='0 0 24 24'
                                  stroke='currentColor'>
                                  <path
                                    strokeLinecap='round'
                                    strokeLinejoin='round'
                                    strokeWidth={
                                      2
                                    }
                                    d='M5 13l4 4L19 7'
                                  />
                                </svg>
                                Ultra
                              </span>
                            </td>
                          )}
                        </tr>
                        <tr>
                          <td className='px-6 py-4 whitespace-nowrap text-sm font-medium text-gray-900'>
                            Autonomie
                          </td>
                          <td className='px-6 py-4 whitespace-nowrap text-sm text-gray-500'>
                            <span className='inline-flex items-center'>
                              <svg
                                className='h-5 w-5 text-green-500 mr-1'
                                fill='none'
                                viewBox='0 0 24 24'
                                stroke='currentColor'>
                                <path
                                  strokeLinecap='round'
                                  strokeLinejoin='round'
                                  strokeWidth={
                                    2
                                  }
                                  d='M5 13l4 4L19 7'
                                />
                              </svg>
                              Jusqu'à 10h
                            </span>
                          </td>
                          {premiumVariant && (
                            <td className='px-6 py-4 whitespace-nowrap text-sm text-gray-500'>
                              <span className='inline-flex items-center'>
                                <svg
                                  className='h-5 w-5 text-green-500 mr-1'
                                  fill='none'
                                  viewBox='0 0 24 24'
                                  stroke='currentColor'>
                                  <path
                                    strokeLinecap='round'
                                    strokeLinejoin='round'
                                    strokeWidth={
                                      2
                                    }
                                    d='M5 13l4 4L19 7'
                                  />
                                </svg>
                                Jusqu'à 24h
                              </span>
                            </td>
                          )}
                        </tr>
                        <tr>
                          <td className='px-6 py-4 whitespace-nowrap text-sm font-medium text-gray-900'>
                            Capacité
                          </td>
                          <td className='px-6 py-4 whitespace-nowrap text-sm text-gray-500'>
                            <span className='inline-flex items-center'>
                              <svg
                                className='h-5 w-5 text-green-500 mr-1'
                                fill='none'
                                viewBox='0 0 24 24'
                                stroke='currentColor'>
                                <path
                                  strokeLinecap='round'
                                  strokeLinejoin='round'
                                  strokeWidth={
                                    2
                                  }
                                  d='M5 13l4 4L19 7'
                                />
                              </svg>
                              Standard
                            </span>
                          </td>
                          {premiumVariant && (
                            <td className='px-6 py-4 whitespace-nowrap text-sm text-gray-500'>
                              <span className='inline-flex items-center'>
                                <svg
                                  className='h-5 w-5 text-green-500 mr-1'
                                  fill='none'
                                  viewBox='0 0 24 24'
                                  stroke='currentColor'>
                                  <path
                                    strokeLinecap='round'
                                    strokeLinejoin='round'
                                    strokeWidth={
                                      2
                                    }
                                    d='M5 13l4 4L19 7'
                                  />
                                </svg>
                                Étendue
                              </span>
                            </td>
                          )}
                        </tr>
                      </tbody>
                    </table>
                  </div>
                </div>
              </motion.div>
            )}
          </AnimatePresence>
        </div>
      </section>

      {/* Section Specs */}
      <section
        ref={specsRef}
        className='py-24 bg-gray-50'>
        <div className='max-w-7xl mx-auto px-4 sm:px-6 lg:px-8'>
          <div className='max-w-3xl mx-auto text-center mb-16'>
            <h2 className='text-3xl font-bold text-gray-900 mb-4'>
              Spécifications techniques
            </h2>
            <p className='text-xl text-gray-500'>
              Caractéristiques détaillées du produit
            </p>
          </div>

          <div className='bg-white rounded-xl shadow-sm overflow-hidden'>
            <div className='border-b border-gray-200'>
              <dl>
                {/* Référence produit */}
                <div className='bg-gray-50 px-4 py-5 sm:grid sm:grid-cols-3 sm:gap-4 sm:px-6'>
                  <dt className='text-sm font-medium text-gray-500'>
                    Référence produit
                  </dt>
                  <dd className='mt-1 text-sm text-gray-900 sm:mt-0 sm:col-span-2'>
                    SKU-{product.id}
                  </dd>
                </div>
                
                {/* Catégories */}
                <div className='bg-white px-4 py-5 sm:grid sm:grid-cols-3 sm:gap-4 sm:px-6'>
                  <dt className='text-sm font-medium text-gray-500'>
                    Catégorie
                  </dt>
                  <dd className='mt-1 text-sm text-gray-900 sm:mt-0 sm:col-span-2'>
                    {product.categories.map(cat => cat.name).join(', ')}
                  </dd>
                </div>
                
                {/* Tags (si présents) */}
                {product.tags && product.tags.length > 0 && (
                  <div className='bg-gray-50 px-4 py-5 sm:grid sm:grid-cols-3 sm:gap-4 sm:px-6'>
                    <dt className='text-sm font-medium text-gray-500'>
                      Tags
                    </dt>
                    <dd className='mt-1 text-sm text-gray-900 sm:mt-0 sm:col-span-2'>
                      {product.tags.map(tag => tag.name).join(', ')}
                    </dd>
                  </div>
                )}
                
                {/* Dimensions (si présentes) */}
                {product.dimensions && (
                  <div className='bg-white px-4 py-5 sm:grid sm:grid-cols-3 sm:gap-4 sm:px-6'>
                    <dt className='text-sm font-medium text-gray-500'>
                      Dimensions
                    </dt>
                    <dd className='mt-1 text-sm text-gray-900 sm:mt-0 sm:col-span-2'>
                      {product.dimensions.length} × {product.dimensions.width} × {product.dimensions.height} cm
                    </dd>
                  </div>
                )}
                
                {/* Poids (si présent) */}
                {product.weight && (
                  <div className='bg-gray-50 px-4 py-5 sm:grid sm:grid-cols-3 sm:gap-4 sm:px-6'>
                    <dt className='text-sm font-medium text-gray-500'>
                      Poids
                    </dt>
                    <dd className='mt-1 text-sm text-gray-900 sm:mt-0 sm:col-span-2'>
                      {product.weight} kg
                    </dd>
                  </div>
                )}
                
                {/* Disponibilité */}
                <div className='bg-white px-4 py-5 sm:grid sm:grid-cols-3 sm:gap-4 sm:px-6'>
                  <dt className='text-sm font-medium text-gray-500'>
                    Disponibilité
                  </dt>
                  <dd className='mt-1 text-sm text-gray-900 sm:mt-0 sm:col-span-2'>
                    {product.stock_status === 'instock' ? (
                      <span className='inline-flex items-center px-2.5 py-0.5 rounded-full text-xs font-medium bg-green-100 text-green-800'>
                        En stock {product.stock_quantity ? `(${product.stock_quantity} unités)` : ''}
                      </span>
                    ) : product.stock_status === 'onbackorder' ? (
                      <span className='inline-flex items-center px-2.5 py-0.5 rounded-full text-xs font-medium bg-yellow-100 text-yellow-800'>
                        Sur commande
                      </span>
                    ) : (
                      <span className='inline-flex items-center px-2.5 py-0.5 rounded-full text-xs font-medium bg-red-100 text-red-800'>
                        Épuisé
                      </span>
                    )}
                  </dd>
                </div>
                
                {/* Attributs (si présents) */}
                {product.attributes && product.attributes.map((attr, index) => (
                  attr.visible && (
                    <div key={attr.id} className={`${index % 2 === 0 ? 'bg-gray-50' : 'bg-white'} px-4 py-5 sm:grid sm:grid-cols-3 sm:gap-4 sm:px-6`}>
                      <dt className='text-sm font-medium text-gray-500'>
                        {attr.name}
                      </dt>
                      <dd className='mt-1 text-sm text-gray-900 sm:mt-0 sm:col-span-2'>
                        {attr.options.join(', ')}
                      </dd>
                    </div>
                  )
                ))}
                
                {/* Évaluation (si présente) */}
                {product.average_rating && parseFloat(product.average_rating) > 0 && (
                  <div className='bg-white px-4 py-5 sm:grid sm:grid-cols-3 sm:gap-4 sm:px-6'>
                    <dt className='text-sm font-medium text-gray-500'>
                      Évaluation
                    </dt>
                    <dd className='mt-1 text-sm text-gray-900 sm:mt-0 sm:col-span-2 flex items-center'>
                      <div className="flex items-center">
                        {[1, 2, 3, 4, 5].map((star) => (
                          <svg 
                            key={star}
                            className={`h-4 w-4 ${parseFloat(product.average_rating) >= star ? 'text-yellow-400' : 'text-gray-300'}`}
                            fill="currentColor" 
                            viewBox="0 0 20 20">
                            <path d="M9.049 2.927c.3-.921 1.603-.921 1.902 0l1.07 3.292a1 1 0 00.95.69h3.462c.969 0 1.371 1.24.588 1.81l-2.8 2.034a1 1 0 00-.364 1.118l1.07 3.292c.3.921-.755 1.688-1.54 1.118l-2.8-2.034a1 1 0 00-1.175 0l-2.8 2.034c-.784.57-1.838-.197-1.539-1.118l1.07-3.292a1 1 0 00-.364-1.118L2.98 8.72c-.783-.57-.38-1.81.588-1.81h3.461a1 1 0 00.951-.69l1.07-3.292z" />
                          </svg>
                        ))}
                      </div>
                      <span className="ml-2">{product.average_rating}/5 {product.rating_count && `(${product.rating_count} avis)`}</span>
                    </dd>
                  </div>
                )}
              </dl>
            </div>
          </div>

          {/* Téléchargements et documents */}
          <div className='mt-12'>
            <h3 className='text-lg font-medium text-gray-900 mb-4'>
              Documents et ressources
            </h3>
            <div className='bg-white rounded-xl shadow-sm p-6'>
              <ul className='divide-y divide-gray-200'>
                <li className='py-4 flex'>
                  <svg
                    className='h-6 w-6 text-gray-400 mr-4'
                    fill='none'
                    viewBox='0 0 24 24'
                    stroke='currentColor'>
                    <path
                      strokeLinecap='round'
                      strokeLinejoin='round'
                      strokeWidth={2}
                      d='M7 21h10a2 2 0 002-2V9.414a1 1 0 00-.293-.707l-5.414-5.414A1 1 0 0012.586 3H7a2 2 0 00-2 2v14a2 2 0 002 2z'
                    />
                  </svg>
                  <div className='ml-3'>
                    <p className='text-sm font-medium text-gray-900'>
                      Guide d'utilisation
                    </p>
                    <p className='text-sm text-gray-500'>
                      PDF, 2.4 MB
                    </p>
                  </div>
                  <div className='ml-auto'>
                    <button className='text-sm font-medium text-indigo-600 hover:text-indigo-500'>
                      Télécharger
                    </button>
                  </div>
                </li>
                <li className='py-4 flex'>
                  <svg
                    className='h-6 w-6 text-gray-400 mr-4'
                    fill='none'
                    viewBox='0 0 24 24'
                    stroke='currentColor'>
                    <path
                      strokeLinecap='round'
                      strokeLinejoin='round'
                      strokeWidth={2}
                      d='M7 21h10a2 2 0 002-2V9.414a1 1 0 00-.293-.707l-5.414-5.414A1 1 0 0012.586 3H7a2 2 0 00-2 2v14a2 2 0 002 2z'
                    />
                  </svg>
                  <div className='ml-3'>
                    <p className='text-sm font-medium text-gray-900'>
                      Fiche technique
                    </p>
                    <p className='text-sm text-gray-500'>
                      PDF, 1.8 MB
                    </p>
                  </div>
                  <div className='ml-auto'>
                    <button className='text-sm font-medium text-indigo-600 hover:text-indigo-500'>
                      Télécharger
                    </button>
                  </div>
                </li>
              </ul>
            </div>
          </div>
        </div>
      </section>

      {/* Reste du composant... */}
    </div>
  );
}